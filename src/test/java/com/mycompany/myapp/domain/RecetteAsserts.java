package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecetteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetteAllPropertiesEquals(Recette expected, Recette actual) {
        assertRecetteAutoGeneratedPropertiesEquals(expected, actual);
        assertRecetteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetteAllUpdatablePropertiesEquals(Recette expected, Recette actual) {
        assertRecetteUpdatableFieldsEquals(expected, actual);
        assertRecetteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetteAutoGeneratedPropertiesEquals(Recette expected, Recette actual) {
        assertThat(actual)
            .as("Verify Recette auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetteUpdatableFieldsEquals(Recette expected, Recette actual) {
        assertThat(actual)
            .as("Verify Recette relevant properties")
            .satisfies(a -> assertThat(a.getNom()).as("check nom").isEqualTo(expected.getNom()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getContenu()).as("check contenu").isEqualTo(expected.getContenu()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecetteUpdatableRelationshipsEquals(Recette expected, Recette actual) {
        // empty method
    }
}
